- name: Disable Old Version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable New Version
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: Install the latest version of Nodejs
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: Copy Backend Service File
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add Application user
  ansible.builtin.user:
    name: expense

- name: Import Role
  ansible.builtin.import_role:
    name: common
    tasks_from: app_prereq

- name: Download Dependencies
  community.general.npm:
    path: /app

- name: Install New relic npm dependency
  ansible.builtin.shell: npm install newrelic --save
  args:
    chdir: /app

- name: Copy Run Script
  ansible.builtin.template:
    src: run.sh
    dest: /app/run.sh

- { name: Install Mysql, ansible.builtin.dnf: { name: "{{ item }}", state: installed }, loop: [ mysql, python3-PyMySQL ] }

- name: Dump all databases to hostname.sql
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: "{{ lookup('amazon.aws.aws_ssm', 'dev.expense.rds.username', region='us-east-1' ) }}"
    login_host: "{{ lookup('amazon.aws.aws_ssm', 'dev.expense.rds.endpoint', region='us-east-1' ) }}"
    login_password: "{{ lookup('amazon.aws.aws_ssm', 'dev.expense.rds.password', region='us-east-1' ) }}"

- name: Start service nginx
  ansible.builtin.service:
    name: backend
    state: restarted
    daemon-reload: yes
    enabled: yes
